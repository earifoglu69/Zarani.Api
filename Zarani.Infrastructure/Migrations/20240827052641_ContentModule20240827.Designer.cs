// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zarani.Infrastructure.Context;

#nullable disable

namespace Zarani.Infrastructure.Migrations
{
    [DbContext(typeof(ZaraniDbContext))]
    [Migration("20240827052641_ContentModule20240827")]
    partial class ContentModule20240827
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zarani.Infrastructure.Models.ContentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date2")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date3")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Detail1")
                        .HasColumnType("text");

                    b.Property<string>("Detail2")
                        .HasColumnType("text");

                    b.Property<string>("Detail3")
                        .HasColumnType("text");

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.Property<string>("Field2")
                        .HasColumnType("text");

                    b.Property<string>("Field3")
                        .HasColumnType("text");

                    b.Property<string>("File1")
                        .HasColumnType("text");

                    b.Property<string>("File1AltText")
                        .HasColumnType("text");

                    b.Property<string>("File2")
                        .HasColumnType("text");

                    b.Property<string>("File2AltText")
                        .HasColumnType("text");

                    b.Property<string>("File3")
                        .HasColumnType("text");

                    b.Property<string>("File3AltText")
                        .HasColumnType("text");

                    b.Property<int>("HeaderId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Num1")
                        .HasColumnType("integer");

                    b.Property<int?>("Num2")
                        .HasColumnType("integer");

                    b.Property<string>("OgImagePath")
                        .HasColumnType("text");

                    b.Property<int?>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Permalink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeoAbstract")
                        .HasColumnType("text");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("text");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("text");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("text");

                    b.Property<byte?>("Stat1")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Stat2")
                        .HasColumnType("smallint");

                    b.Property<string>("Title1")
                        .HasColumnType("text");

                    b.Property<string>("Title2")
                        .HasColumnType("text");

                    b.Property<string>("Title3")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Zarani.Infrastructure.Models.ModuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Menu"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brand"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Campaign"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comment"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Content"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Faq"
                        },
                        new
                        {
                            Id = 7,
                            Name = "FaqCategory"
                        },
                        new
                        {
                            Id = 8,
                            Name = "LandingPage"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Model"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ModelGallery"
                        },
                        new
                        {
                            Id = 11,
                            Name = "News"
                        },
                        new
                        {
                            Id = 12,
                            Name = "NewsGallery"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Slider"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Product"
                        });
                });

            modelBuilder.Entity("Zarani.Infrastructure.Models.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Zarani.Infrastructure.Models.ContentEntity", b =>
                {
                    b.HasOne("Zarani.Infrastructure.Models.ContentEntity", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zarani.Infrastructure.Models.ModuleEntity", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zarani.Infrastructure.Models.ContentEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Header");

                    b.Navigation("Module");

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
